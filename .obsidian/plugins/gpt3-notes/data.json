{
  "appName": "GP3_NOTES",
  "token": "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",
  "model": "text-davinci-003",
  "tokens": 300,
  "temperature": 5,
  "promptHistory": [
    {
      "prompt": "Summarize my notes.",
      "processedPrompt": "Summarize my notes.",
      "temperature": 0.5,
      "tokens": 300
    },
    {
      "prompt": "Summarize my notes.Create an outline with footnotes ",
      "processedPrompt": "Summarize my notes.Create an outline with footnotes ",
      "temperature": 0.5,
      "tokens": 300
    },
    {
      "prompt": "Summarize my notes.Create an outline with footnotes {{selection}} ",
      "processedPrompt": "Summarize my notes.Create an outline with footnotes  ",
      "temperature": 0.5,
      "tokens": 300
    },
    {
      "prompt": "Create an outline with footnotes {{selection}} ",
      "processedPrompt": "Create an outline with footnotes # Terraform Tools\n\n- [aztfexport](https://github.com/Azure/aztfexport)Â - A tool to bring existing Azure resources under Terraform's management.\n- [tflint](https://github.com/terraform-linters/tflint)Â â€“ Terraform linter for errors that the plan canâ€™t catch.\n- [tfenv](https://github.com/tfutils/tfenv)Â â€“ Terraform version manager (Read more about it in theÂ [How to Use tfenv to Manage Multiple Terraform Versions](https://spacelift.io/blog/tfenv)Â article)\n- [checkov](https://github.com/bridgecrewio/checkov/)Â â€“Â  Terraform static analysis toolÂ \n- [terratest](https://github.com/gruntwork-io/terratest/)Â â€“ Go library that helps you with automated tests for Terraform\n- [pre-commit-terraform](https://github.com/antonbabenko/pre-commit-terraform)Â â€“ Pre-commit git hooks for automationÂ \n- [terraform-docs](https://github.com/terraform-docs/terraform-docs)Â â€“ Quickly generate docs from modules\n- [spacelift](https://spacelift.io/?utm_source=blog&utm_medium=text&utm_id=blogpost&utm_content=%7Bterraform_best_practices%7D)Â â€“ Collaborative Infrastructure Delivery Platform for Terraform ([Terraform Cloud alternative](https://spacelift.io/terraform-cloud-alternative))\n- [atlantis](https://github.com/runatlantis/atlantis)Â â€“ Workflow for collaborating on Terraform projects\n- [terraform-cost-estimation](https://github.com/antonbabenko/terraform-cost-estimation)Â â€“ Free cost estimation service for your plans.\n\n- [blast radius](https://github.com/28mm/blast-radius)Â - Interactive visualizations of Terraform dependency graphs.Â ðŸ’€\n- [Checkov](https://github.com/bridgecrewio/checkov/)Â - Terraform static analysis tool for terraform>=0.12\n- [Coder](https://coder.com/)Â - Coder provisions software development environments on your infrastructure via Terraform.\n- [driftctl](https://github.com/snyk/driftctl)Â - Detect, track, and alert on infrastructure drift\n- [flora](https://github.com/ketchoop/flora)Â - Terraform version manager.\n- [fogg](https://github.com/chanzuckerberg/fogg)Â - A tool for eliminating toil in managing terraform repositories.\n- [former2](https://github.com/iann0036/former2)Â - Generate terraform configuration from your existing resources within your AWS account.\n- [fuzzy-terraform-rm](https://github.com/paololazzari/fuzzy-terraform-rm)Â - A fuzzy-finder command-line tool for removing resources from terraform state.\n- [gaia](https://github.com/gaia-app/gaia)Â - A web application to import and run your Terraform modules.\n- [hcldump](https://github.com/magodo/hcldump)Â - Dump the HCL (v2) abstract syntax tree.\n- [hcledit](https://github.com/minamijoyo/hcledit)Â - A command line editor for HCL.\n- [hclgrep](https://github.com/magodo/hclgrep)Â - Syntax based grep for HCL(v2).\n- [iam-policy-json-to-terraform](https://github.com/flosell/iam-policy-json-to-terraform)Â - Small tool to convert an IAM Policy in JSON format into a Terraform aws_iam_policy_document\n- [k2tf](https://github.com/sl1pm4t/k2tf)Â - Kubernetes YAML to Terraform HCL converter.\n- [KICS](https://github.com/Checkmarx/kics)Â - Scans IaC projects for security vulnerabilities, compliance issues, and infrastructure misconfiguration. Currently working with Terraform projects, Kubernetes manifests, Dockerfiles, AWS CloudFormation Templates, and Ansible playbooks.\n- [Infracost](https://github.com/infracost/infracost)Â - Cloud cost estimates for Terraform in your CLI and pull requests.\n- [inframap](https://github.com/cycloidio/inframap)Â - Read your tfstate or HCL to generate a graph specific for each provider, showing only the resources that are most important/relevant.\n- [json2hcl](https://github.com/kvz/json2hcl)Â - Convert JSON to HCL and vice versa.Â ðŸ‘»\n- [modules.tf-lambda](https://github.com/antonbabenko/modules.tf-lambda)Â - Infrastructure as code generator from visual diagrams created withÂ [Cloudcraft.co](https://cloudcraft.co/app)Â to Terraform.\n- [para](https://github.com/paraterraform/para)Â - The missing 3rd-party plugin manager and a \"Swiss army knife\" for Terraform/Terragrunt - just 1 tool to facilitate all workflows.Â ðŸ’€\n- [pluralith](https://www.pluralith.com/)Â - Terraform state visualization and automated generation of infrastructure documentation.Â ðŸ’²\n- [pre-commit-terraform](https://github.com/antonbabenko/pre-commit-terraform)Â - pre-commit git hooks to take care of Terraform configurations (auto-format, validate, update docs).\n- [pike](https://github.com/jamesWoolfenden/pike)Â - Pike calculates the permissions or IAM policy required to build your Terraform.\n- [pretf](https://github.com/raymondbutcher/pretf)Â - drop-in Terraform wrapper that generates Terraform configuration with Python. SeeÂ [pretf documentation](https://pretf.readthedocs.io/en/latest/)\n- [python-terrafile](https://github.com/claranet/python-terrafile)Â - Systematically manage external modules from Github for use in Terraform.\n- [prettyplan](https://github.com/chrislewisdev/prettyplan)Â - Prettyplan ([available online here](https://chrislewisdev.github.io/prettyplan/)) is a small tool to help you view large Terraform plans with ease.Â ðŸ‘»\n- [regula](https://github.com/fugue/regula)Â - Evaluates Terraform infrastructure-as-code for potential AWS, Azure, and Google Cloud security misconfigurations and compliance violations prior to deployment.\n- [rover](https://github.com/im2nguyen/rover)Â - Interactive Terraform state and configuration explorer.\n- [ruby-terraform](https://github.com/infrablocks/ruby_terraform)Â - Simple Ruby wrapper for invoking terraform commands.\n- [sato](https://github.com/JamesWoolfenden/sato)Â - Sato helps you convert your legacy Cloudformation into Terraform.\n- [scenery](https://github.com/dmlittle/scenery)Â - Another Terraform plan output prettifier.Â ðŸ‘»\n- [scratchrelaxtv](https://github.com/YakDriver/scratchrelaxtv)Â - Simple Python tool to help with module development - extract vars fromÂ `main.tf`Â to generateÂ `variables.tf`Â and make module usage stub fromÂ `variables.tf`.\n- [serverless.tf - Doing serverless with Terraform](https://serverless.tf/)Â - serverless.tf is an opinionated open-source framework for developing, building, deploying, and securing serverless applications and infrastructures on AWS using Terraform.Â [Read more](https://github.com/antonbabenko/serverless.tf).\n- [Shisho](https://github.com/flatt-security/shisho)Â - Lightweight static analyzer for Terraform.\n- [Styra Declarative Authorization Service (DAS)](https://www.styra.com/terraform-cloud-config-management-with-styra-das-and-open-policy-agent)Â - Provides a managedÂ [Open Policy Agent (OPA)](https://www.openpolicyagent.org/)Â platform for Application and Infrastructure use cases, including Terraform, Terraform Cloud, and Kubernetes. Enforce policy guardrails during development, in CI/CD pipelines, and at deploy time. Styra DAS Free provides multiple systems and users, policy impact analysis, decision logging and replay, and access to Styra's Terraform policy library.\n- [tads-boilerplate](https://github.com/Thomvaill/tads-boilerplate)Â - The power of Ansible and Terraform + the simplicity of Docker Swarm = Infrastructure as Code and DevOps best practices.\n- [tau](https://github.com/avinor/tau)Â - Tau is a thin wrapper on top of terraform to manage multiple deployments, dependencies, and secrets.\n- [terraboard](https://github.com/camptocamp/terraboard)Â - Web dashboard to inspect Terraform States.\n- [terraboot](https://github.com/MastodonC/terraboot)Â - DSL to generate a terraform configuration and run it.\n- [terracognita](https://github.com/cycloidio/terracognita)Â - Reads from existing Cloud Providers (reverse Terraform) and generates your infrastructure as code on Terraform configuration.\n- [terracost](https://github.com/cycloidio/terracost)Â - Cloud cost estimation for Terraform in your CLI.\n- [TerraDepot](https://github.com/derBroBro/TerraDepot)Â Terraform state repository, based on the default http remote backend. Allows the central administration of tfstates on AWS S3.\n- [terradozer](https://github.com/jckuester/terradozer)Â - Terraform destroy without configuration files.\n- [terrafile](https://github.com/coretech/terrafile)Â - Systematically manage external modules from Github for use in Terraform (written in Go).\n- [terrafile](https://github.com/dxw/terrafile)Â - Systematically manage external modules from Github for use in Terraform (written in Ruby).\n- [terraform-bundle](https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle)Â - Easily builds bundles containing a Terraform binary as well as provider binaries. Useful for CI and air-gapped Terraform Enterprise.\n- [terraform-cdk](https://github.com/hashicorp/terraform-cdk)Â - CDK (Cloud Development Kit) for Terraform allows developers to use familiar programming languages to define cloud infrastructure and provision it through HashiCorp Terraform.\n- [terraform-iam-policy-validator](https://github.com/awslabs/terraform-iam-policy-validator)Â - CLI validates AWS IAM Policies in a Terraform template against AWS IAM best practices.\n- [terraform-credentials-vault](https://github.com/oulman/terraform-credentials-vault)Â - A Terraform \"credentials helper\" plugin that allows providing credentials for Terraform-native services (private module registries, Terraform Cloud, etc) via environment variables.\n- [terraform-diff](https://github.com/contentful-labs/terraform-diff)Â - Always know where you need to run Terraform plan & apply!\n- [terraform-docs](https://github.com/terraform-docs/terraform-docs)Â - Quick utility to generate docs from terraform modules.\n- [terraform-graph-beautifier](https://github.com/pcasteran/terraform-graph-beautifier)Â - Command line tool allowing to convert the barely usable output of the terraform graph command to something more meaningful and explanatory.\n- [terraform-landscape](https://github.com/coinbase/terraform-landscape)Â -Â _(only 0.11 and earlier)_Â Improve Terraform's plan output to be easier to read and understand.\n- [terraform-operator](https://github.com/isaaguilar/terraform-operator.git)Â - A Kubernetes CRD to handle Terraform operations.\n- [terraform-plan-parser](https://github.com/lifeomic/terraform-plan-parser)Â - Command line utility and JavaScript API for parsing stdout fromÂ `terraform plan`Â and converting it to JSON.Â ðŸ‘»\n- [terraform-provisioner](https://github.com/shuaibiyy/terraform-provisioner)Â - Tool for managing multiple provisions of the same Terraform scripts.\n- [terraform-rake-tasks](https://github.com/gina-alaska/terraform-rake-tasks)Â - Shared Rake tasks for managing terraform plans.\n- [terraform-repl](https://github.com/paololazzari/terraform-repl)Â - A terraform console wrapper for a better interactive console experience.\n- [terraform.py](https://github.com/ciscocloud/terraform.py)Â - Ansible dynamic inventory script for parsing Terraform state files.\n- [terraformer](https://github.com/GoogleCloudPlatform/terraformer)Â - CLI tool to generate terraform files from existing infrastructure. Infrastructure to Code. Supported many providers.\n- [terraforming](https://github.com/dtan4/terraforming)Â - Export existing AWS resources to Terraform style (tf, tfstate). Similar toÂ `terraformer`.\n- [terraformize](https://github.com/naorlivne/terraformize)Â - Apply\\Destroy Terraform modules via a simple REST API endpoint.\n- [terraformsh](https://github.com/pwillis-els/terraformsh)Â - A wrapper in Bash for easier CLI UX and DRY hierarchical configs\n- [Terraform-Visual](https://github.com/hieven/terraform-visual)Â - A simple but powerful tool to visualize Terraform plan.\n- [terragrunt](https://github.com/gruntwork-io/terragrunt)Â - Terragrunt is a thin wrapper for Terraform that provides extra tools for keeping your Terraform configurations DRY, working with multiple Terraform modules, and managing remote state.\n- [Terrahaxs](https://www.terrahaxs.com/)Â - A GitOps Terraform CI/CD GitHub ApplicationÂ ðŸ’²\n- [terrahelp](https://github.com/opencredo/terrahelp)Â - Command line utility aimed at providing supplementary functionality which can sometimes prove useful when working with Terraform.\n- [terrahub](https://github.com/TerraHubCorp/terrahub)Â - TerraHub is terraform automation and orchestration tool. Seamlessly integrated into console.terrahub.io, enterprise friendly GUI to show realtime terraform executions, as well as auditing and reporting capabilities for historical terraform runs.Â ðŸ’²\n- [terramate](https://github.com/mineiros-io/terramate)Â - Tool for managing multiple Terraform stacks that comes with support for change detection and code generation\n- [terrascan](https://github.com/accurics/terrascan)Â - Collection of security and best practice test for static code analysis of terraform templates\n- [terraspace](https://terraspace.cloud/)Â - The Terraform Framework\n- [terrastate](https://github.com/rohinivsenthil/terrastate)Â - Visual Studio Code extension to monitor/deploy/destroy Terraform resources in your workspace\n- [terratag](https://github.com/env0/terratag)Â - Terratag is a CLI tool that enables users of Terraform to automatically create and maintain tags across their entire set of AWS, Azure, and GCP resources.\n- [tf-init-booster](https://github.com/hayorov/terraform-init-booster)Â - A Pre-terraform routine that speedups terraform modules download for bulky blueprints.\n- [tf-profile](https://github.com/datarootsio/tf-profile/)Â - Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations.\n- [tf-summarize](https://github.com/dineshba/tf-summarize)Â - A command-line utility to print the summary of the terraform plan\n- [tfaction](https://github.com/suzuki-shunsuke/tfaction)Â - GitHub Actions collection for Opinionated Terraform Workflow\n- [tfautomv](https://github.com/padok-team/tfautomv)Â - Generate TerraformÂ `moved`Â blocks automatically for painless refactoring\n- [tfcmt](https://github.com/suzuki-shunsuke/tfcmt)Â - CLI to notify the result of plan and apply as Pull Request comment.\n- [tfedit](https://github.com/minamijoyo/tfedit)Â - A refactoring tool for Terraform.\n- [tfsec](https://github.com/aquasecurity/tfsec)Â - Terraform static analysis tool that supports terraform <0.12 & >=0.12 & directly integrates with HCL parser for better results.\n- [tfenv](https://github.com/tfutils/tfenv)Â - Terraform version manager inspired by rbenv.\n- [tfjson](https://github.com/palantir/tfjson)Â - Utility to read in a Terraform plan file and dump it out in JSON.Â ðŸ’€\n- [tflint](https://github.com/terraform-linters/tflint)Â - Terraform linter for detecting errors that can not be detected byÂ `terraform plan`\n- [tfmask](https://github.com/cloudposse/tfmask)Â - Terraform utility to mask select output fromÂ `terraform plan`Â andÂ `terraform apply`\n- [tfmigrate](https://github.com/minamijoyo/tfmigrate)Â - A Terraform state migration tool for GitOps.\n- [tfmigrator](https://github.com/tfmigrator/cli)Â - Go library and CLI to migrate Terraform Configuration and State\n- [tfproviderlint](https://github.com/bflad/tfproviderlint)Â - Terraform Provider Lint Tool.\n- [tfrepl](https://github.com/andreineculau/tfrepl)Â - A Terraform REPL, giving you a full shell experience. Readline based. No dependencies. Save config changes. History.\n- [tfscaffold](https://github.com/tfutils/tfscaffold)Â - Framework for controlling multi-environment multi-component terraform-managed AWS infrastructure.\n- [tfschema](https://github.com/minamijoyo/tfschema)Â - Schema inspector for Terraform providers.\n- [tftree](https://github.com/busser/tftree)Â - Display your Terraform module call stack in your terminal.\n- [tftarget](https://github.com/future-architect/tftarget)Â - CLI Tool to doÂ `terraform xxx -target={...}`Â interactively.\n- [tfupdate](https://github.com/minamijoyo/tfupdate)Â - Update version constraints in your Terraform configurations.\n- [tfvaultenv](https://github.com/oulman/tfvaultenv)Â - tfvaultenv reads secrets from HashiCorp Vault and outputs environment variables for various Terraform providers with those secrets.\n- [tfwrapper](https://github.com/manheim/tfwrapper)Â - Rubygem providing rake tasks for running Hashicorp Terraform sanely.\n- [tgf](https://github.com/coveo/tgf)Â - Terragrunt frontend for executing Terragrunt/Terraform through Docker.\n- [tpm](https://github.com/Madh93/tpm)Â - A package manager for Terraform providers.\n- [validIaC](https://github.com/gofireflyio/validiac)Â - ValidIaC combines the best open-source tools to help ensure Terraform best practices, hygiene & security.\n- [xterrafile](https://github.com/devopsmakers/xterrafile)Â Systematically manage external modules from the module registry, git, or local directories for use in Terraform (written in Go).\n- [yor](https://github.com/bridgecrewio/yor)Â - Automatically tag and trace infrastructure as code frameworks (Terraform, Cloudformation, and Serverless).\n\n\n- [pyhcl](https://github.com/virtuald/pyhcl)Â - HCL parser in Python\n- [python-hcl2](https://github.com/amplify-education/python-hcl2/)Â - HCL2 parser in Python\n- [rhcl](https://github.com/winebarrel/rhcl)Â - Pure Ruby HCL parser\n\n- [Terraform Generator](https://github.com/sudokar/generator-tf-module)Â - Scaffolding for a new terraform module or project with support of test frameworks (terratest and kitchen-terraform)\n- [Terraform GitOps Framework](https://www.kubestack.com/)Â - Everything you need to build reliable automation for AKS, EKS, and GKE Kubernetes clusters in one free and open-source framework.\n\n- [VS Code](https://marketplace.visualstudio.com/items?itemName=mauve.terraform) ",
      "temperature": 0.5,
      "tokens": 300
    },
    {
      "prompt": "Create an outline with footnotes on {{selection}} ",
      "processedPrompt": "Create an outline with footnotes on # Terraform Tools\n\n- [aztfexport](https://github.com/Azure/aztfexport)Â - A tool to bring existing Azure resources under Terraform's management.\n- [tflint](https://github.com/terraform-linters/tflint)Â â€“ Terraform linter for errors that the plan canâ€™t catch.\n- [tfenv](https://github.com/tfutils/tfenv)Â â€“ Terraform version manager (Read more about it in theÂ [How to Use tfenv to Manage Multiple Terraform Versions](https://spacelift.io/blog/tfenv)Â article)\n- [checkov](https://github.com/bridgecrewio/checkov/)Â â€“Â  Terraform static analysis toolÂ \n- [terratest](https://github.com/gruntwork-io/terratest/)Â â€“ Go library that helps you with automated tests for Terraform\n- [pre-commit-terraform](https://github.com/antonbabenko/pre-commit-terraform)Â â€“ Pre-commit git hooks for automationÂ \n- [terraform-docs](https://github.com/terraform-docs/terraform-docs)Â â€“ Quickly generate docs from modules\n- [spacelift](https://spacelift.io/?utm_source=blog&utm_medium=text&utm_id=blogpost&utm_content=%7Bterraform_best_practices%7D)Â â€“ Collaborative Infrastructure Delivery Platform for Terraform ([Terraform Cloud alternative](https://spacelift.io/terraform-cloud-alternative))\n- [atlantis](https://github.com/runatlantis/atlantis)Â â€“ Workflow for collaborating on Terraform projects\n- [terraform-cost-estimation](https://github.com/antonbabenko/terraform-cost-estimation)Â â€“ Free cost estimation service for your plans.\n\n- [blast radius](https://github.com/28mm/blast-radius)Â - Interactive visualizations of Terraform dependency graphs.Â ðŸ’€\n- [Checkov](https://github.com/bridgecrewio/checkov/)Â - Terraform static analysis tool for terraform>=0.12\n- [Coder](https://coder.com/)Â - Coder provisions software development environments on your infrastructure via Terraform.\n- [driftctl](https://github.com/snyk/driftctl)Â - Detect, track, and alert on infrastructure drift\n- [flora](https://github.com/ketchoop/flora)Â - Terraform version manager.\n- [fogg](https://github.com/chanzuckerberg/fogg)Â - A tool for eliminating toil in managing terraform repositories.\n- [former2](https://github.com/iann0036/former2)Â - Generate terraform configuration from your existing resources within your AWS account.\n- [fuzzy-terraform-rm](https://github.com/paololazzari/fuzzy-terraform-rm)Â - A fuzzy-finder command-line tool for removing resources from terraform state.\n- [gaia](https://github.com/gaia-app/gaia)Â - A web application to import and run your Terraform modules.\n- [hcldump](https://github.com/magodo/hcldump)Â - Dump the HCL (v2) abstract syntax tree.\n- [hcledit](https://github.com/minamijoyo/hcledit)Â - A command line editor for HCL.\n- [hclgrep](https://github.com/magodo/hclgrep)Â - Syntax based grep for HCL(v2).\n- [iam-policy-json-to-terraform](https://github.com/flosell/iam-policy-json-to-terraform)Â - Small tool to convert an IAM Policy in JSON format into a Terraform aws_iam_policy_document\n- [k2tf](https://github.com/sl1pm4t/k2tf)Â - Kubernetes YAML to Terraform HCL converter.\n- [KICS](https://github.com/Checkmarx/kics)Â - Scans IaC projects for security vulnerabilities, compliance issues, and infrastructure misconfiguration. Currently working with Terraform projects, Kubernetes manifests, Dockerfiles, AWS CloudFormation Templates, and Ansible playbooks.\n- [Infracost](https://github.com/infracost/infracost)Â - Cloud cost estimates for Terraform in your CLI and pull requests.\n- [inframap](https://github.com/cycloidio/inframap)Â - Read your tfstate or HCL to generate a graph specific for each provider, showing only the resources that are most important/relevant.\n- [json2hcl](https://github.com/kvz/json2hcl)Â - Convert JSON to HCL and vice versa.Â ðŸ‘»\n- [modules.tf-lambda](https://github.com/antonbabenko/modules.tf-lambda)Â - Infrastructure as code generator from visual diagrams created withÂ [Cloudcraft.co](https://cloudcraft.co/app)Â to Terraform.\n- [para](https://github.com/paraterraform/para)Â - The missing 3rd-party plugin manager and a \"Swiss army knife\" for Terraform/Terragrunt - just 1 tool to facilitate all workflows.Â ðŸ’€\n- [pluralith](https://www.pluralith.com/)Â - Terraform state visualization and automated generation of infrastructure documentation.Â ðŸ’²\n- [pre-commit-terraform](https://github.com/antonbabenko/pre-commit-terraform)Â - pre-commit git hooks to take care of Terraform configurations (auto-format, validate, update docs).\n- [pike](https://github.com/jamesWoolfenden/pike)Â - Pike calculates the permissions or IAM policy required to build your Terraform.\n- [pretf](https://github.com/raymondbutcher/pretf)Â - drop-in Terraform wrapper that generates Terraform configuration with Python. SeeÂ [pretf documentation](https://pretf.readthedocs.io/en/latest/)\n- [python-terrafile](https://github.com/claranet/python-terrafile)Â - Systematically manage external modules from Github for use in Terraform.\n- [prettyplan](https://github.com/chrislewisdev/prettyplan)Â - Prettyplan ([available online here](https://chrislewisdev.github.io/prettyplan/)) is a small tool to help you view large Terraform plans with ease.Â ðŸ‘»\n- [regula](https://github.com/fugue/regula)Â - Evaluates Terraform infrastructure-as-code for potential AWS, Azure, and Google Cloud security misconfigurations and compliance violations prior to deployment.\n- [rover](https://github.com/im2nguyen/rover)Â - Interactive Terraform state and configuration explorer.\n- [ruby-terraform](https://github.com/infrablocks/ruby_terraform)Â - Simple Ruby wrapper for invoking terraform commands.\n- [sato](https://github.com/JamesWoolfenden/sato)Â - Sato helps you convert your legacy Cloudformation into Terraform.\n- [scenery](https://github.com/dmlittle/scenery)Â - Another Terraform plan output prettifier.Â ðŸ‘»\n- [scratchrelaxtv](https://github.com/YakDriver/scratchrelaxtv)Â - Simple Python tool to help with module development - extract vars fromÂ `main.tf`Â to generateÂ `variables.tf`Â and make module usage stub fromÂ `variables.tf`.\n- [serverless.tf - Doing serverless with Terraform](https://serverless.tf/)Â - serverless.tf is an opinionated open-source framework for developing, building, deploying, and securing serverless applications and infrastructures on AWS using Terraform.Â [Read more](https://github.com/antonbabenko/serverless.tf).\n- [Shisho](https://github.com/flatt-security/shisho)Â - Lightweight static analyzer for Terraform.\n- [Styra Declarative Authorization Service (DAS)](https://www.styra.com/terraform-cloud-config-management-with-styra-das-and-open-policy-agent)Â - Provides a managedÂ [Open Policy Agent (OPA)](https://www.openpolicyagent.org/)Â platform for Application and Infrastructure use cases, including Terraform, Terraform Cloud, and Kubernetes. Enforce policy guardrails during development, in CI/CD pipelines, and at deploy time. Styra DAS Free provides multiple systems and users, policy impact analysis, decision logging and replay, and access to Styra's Terraform policy library.\n- [tads-boilerplate](https://github.com/Thomvaill/tads-boilerplate)Â - The power of Ansible and Terraform + the simplicity of Docker Swarm = Infrastructure as Code and DevOps best practices.\n- [tau](https://github.com/avinor/tau)Â - Tau is a thin wrapper on top of terraform to manage multiple deployments, dependencies, and secrets.\n- [terraboard](https://github.com/camptocamp/terraboard)Â - Web dashboard to inspect Terraform States.\n- [terraboot](https://github.com/MastodonC/terraboot)Â - DSL to generate a terraform configuration and run it.\n- [terracognita](https://github.com/cycloidio/terracognita)Â - Reads from existing Cloud Providers (reverse Terraform) and generates your infrastructure as code on Terraform configuration.\n- [terracost](https://github.com/cycloidio/terracost)Â - Cloud cost estimation for Terraform in your CLI.\n- [TerraDepot](https://github.com/derBroBro/TerraDepot)Â Terraform state repository, based on the default http remote backend. Allows the central administration of tfstates on AWS S3.\n- [terradozer](https://github.com/jckuester/terradozer)Â - Terraform destroy without configuration files.\n- [terrafile](https://github.com/coretech/terrafile)Â - Systematically manage external modules from Github for use in Terraform (written in Go).\n- [terrafile](https://github.com/dxw/terrafile)Â - Systematically manage external modules from Github for use in Terraform (written in Ruby).\n- [terraform-bundle](https://github.com/hashicorp/terraform/tree/master/tools/terraform-bundle)Â - Easily builds bundles containing a Terraform binary as well as provider binaries. Useful for CI and air-gapped Terraform Enterprise.\n- [terraform-cdk](https://github.com/hashicorp/terraform-cdk)Â - CDK (Cloud Development Kit) for Terraform allows developers to use familiar programming languages to define cloud infrastructure and provision it through HashiCorp Terraform.\n- [terraform-iam-policy-validator](https://github.com/awslabs/terraform-iam-policy-validator)Â - CLI validates AWS IAM Policies in a Terraform template against AWS IAM best practices.\n- [terraform-credentials-vault](https://github.com/oulman/terraform-credentials-vault)Â - A Terraform \"credentials helper\" plugin that allows providing credentials for Terraform-native services (private module registries, Terraform Cloud, etc) via environment variables.\n- [terraform-diff](https://github.com/contentful-labs/terraform-diff)Â - Always know where you need to run Terraform plan & apply!\n- [terraform-docs](https://github.com/terraform-docs/terraform-docs)Â - Quick utility to generate docs from terraform modules.\n- [terraform-graph-beautifier](https://github.com/pcasteran/terraform-graph-beautifier)Â - Command line tool allowing to convert the barely usable output of the terraform graph command to something more meaningful and explanatory.\n- [terraform-landscape](https://github.com/coinbase/terraform-landscape)Â -Â _(only 0.11 and earlier)_Â Improve Terraform's plan output to be easier to read and understand.\n- [terraform-operator](https://github.com/isaaguilar/terraform-operator.git)Â - A Kubernetes CRD to handle Terraform operations.\n- [terraform-plan-parser](https://github.com/lifeomic/terraform-plan-parser)Â - Command line utility and JavaScript API for parsing stdout fromÂ `terraform plan`Â and converting it to JSON.Â ðŸ‘»\n- [terraform-provisioner](https://github.com/shuaibiyy/terraform-provisioner)Â - Tool for managing multiple provisions of the same Terraform scripts.\n- [terraform-rake-tasks](https://github.com/gina-alaska/terraform-rake-tasks)Â - Shared Rake tasks for managing terraform plans.\n- [terraform-repl](https://github.com/paololazzari/terraform-repl)Â - A terraform console wrapper for a better interactive console experience.\n- [terraform.py](https://github.com/ciscocloud/terraform.py)Â - Ansible dynamic inventory script for parsing Terraform state files.\n- [terraformer](https://github.com/GoogleCloudPlatform/terraformer)Â - CLI tool to generate terraform files from existing infrastructure. Infrastructure to Code. Supported many providers.\n- [terraforming](https://github.com/dtan4/terraforming)Â - Export existing AWS resources to Terraform style (tf, tfstate). Similar toÂ `terraformer`.\n- [terraformize](https://github.com/naorlivne/terraformize)Â - Apply\\Destroy Terraform modules via a simple REST API endpoint.\n- [terraformsh](https://github.com/pwillis-els/terraformsh)Â - A wrapper in Bash for easier CLI UX and DRY hierarchical configs\n- [Terraform-Visual](https://github.com/hieven/terraform-visual)Â - A simple but powerful tool to visualize Terraform plan.\n- [terragrunt](https://github.com/gruntwork-io/terragrunt)Â - Terragrunt is a thin wrapper for Terraform that provides extra tools for keeping your Terraform configurations DRY, working with multiple Terraform modules, and managing remote state.\n- [Terrahaxs](https://www.terrahaxs.com/)Â - A GitOps Terraform CI/CD GitHub ApplicationÂ ðŸ’²\n- [terrahelp](https://github.com/opencredo/terrahelp)Â - Command line utility aimed at providing supplementary functionality which can sometimes prove useful when working with Terraform.\n- [terrahub](https://github.com/TerraHubCorp/terrahub)Â - TerraHub is terraform automation and orchestration tool. Seamlessly integrated into console.terrahub.io, enterprise friendly GUI to show realtime terraform executions, as well as auditing and reporting capabilities for historical terraform runs.Â ðŸ’²\n- [terramate](https://github.com/mineiros-io/terramate)Â - Tool for managing multiple Terraform stacks that comes with support for change detection and code generation\n- [terrascan](https://github.com/accurics/terrascan)Â - Collection of security and best practice test for static code analysis of terraform templates\n- [terraspace](https://terraspace.cloud/)Â - The Terraform Framework\n- [terrastate](https://github.com/rohinivsenthil/terrastate)Â - Visual Studio Code extension to monitor/deploy/destroy Terraform resources in your workspace\n- [terratag](https://github.com/env0/terratag)Â - Terratag is a CLI tool that enables users of Terraform to automatically create and maintain tags across their entire set of AWS, Azure, and GCP resources.\n- [tf-init-booster](https://github.com/hayorov/terraform-init-booster)Â - A Pre-terraform routine that speedups terraform modules download for bulky blueprints.\n- [tf-profile](https://github.com/datarootsio/tf-profile/)Â - Profiler for Terraform runs. Generate global stats, resource-level stats or visualizations.\n- [tf-summarize](https://github.com/dineshba/tf-summarize)Â - A command-line utility to print the summary of the terraform plan\n- [tfaction](https://github.com/suzuki-shunsuke/tfaction)Â - GitHub Actions collection for Opinionated Terraform Workflow\n- [tfautomv](https://github.com/padok-team/tfautomv)Â - Generate TerraformÂ `moved`Â blocks automatically for painless refactoring\n- [tfcmt](https://github.com/suzuki-shunsuke/tfcmt)Â - CLI to notify the result of plan and apply as Pull Request comment.\n- [tfedit](https://github.com/minamijoyo/tfedit)Â - A refactoring tool for Terraform.\n- [tfsec](https://github.com/aquasecurity/tfsec)Â - Terraform static analysis tool that supports terraform <0.12 & >=0.12 & directly integrates with HCL parser for better results.\n- [tfenv](https://github.com/tfutils/tfenv)Â - Terraform version manager inspired by rbenv.\n- [tfjson](https://github.com/palantir/tfjson)Â - Utility to read in a Terraform plan file and dump it out in JSON.Â ðŸ’€\n- [tflint](https://github.com/terraform-linters/tflint)Â - Terraform linter for detecting errors that can not be detected byÂ `terraform plan`\n- [tfmask](https://github.com/cloudposse/tfmask)Â - Terraform utility to mask select output fromÂ `terraform plan`Â andÂ `terraform apply`\n- [tfmigrate](https://github.com/minamijoyo/tfmigrate)Â - A Terraform state migration tool for GitOps.\n- [tfmigrator](https://github.com/tfmigrator/cli)Â - Go library and CLI to migrate Terraform Configuration and State\n- [tfproviderlint](https://github.com/bflad/tfproviderlint)Â - Terraform Provider Lint Tool.\n- [tfrepl](https://github.com/andreineculau/tfrepl)Â - A Terraform REPL, giving you a full shell experience. Readline based. No dependencies. Save config changes. History.\n- [tfscaffold](https://github.com/tfutils/tfscaffold)Â - Framework for controlling multi-environment multi-component terraform-managed AWS infrastructure.\n- [tfschema](https://github.com/minamijoyo/tfschema)Â - Schema inspector for Terraform providers.\n- [tftree](https://github.com/busser/tftree)Â - Display your Terraform module call stack in your terminal.\n- [tftarget](https://github.com/future-architect/tftarget)Â - CLI Tool to doÂ `terraform xxx -target={...}`Â interactively.\n- [tfupdate](https://github.com/minamijoyo/tfupdate)Â - Update version constraints in your Terraform configurations.\n- [tfvaultenv](https://github.com/oulman/tfvaultenv)Â - tfvaultenv reads secrets from HashiCorp Vault and outputs environment variables for various Terraform providers with those secrets.\n- [tfwrapper](https://github.com/manheim/tfwrapper)Â - Rubygem providing rake tasks for running Hashicorp Terraform sanely.\n- [tgf](https://github.com/coveo/tgf)Â - Terragrunt frontend for executing Terragrunt/Terraform through Docker.\n- [tpm](https://github.com/Madh93/tpm)Â - A package manager for Terraform providers.\n- [validIaC](https://github.com/gofireflyio/validiac)Â - ValidIaC combines the best open-source tools to help ensure Terraform best practices, hygiene & security.\n- [xterrafile](https://github.com/devopsmakers/xterrafile)Â Systematically manage external modules from the module registry, git, or local directories for use in Terraform (written in Go).\n- [yor](https://github.com/bridgecrewio/yor)Â - Automatically tag and trace infrastructure as code frameworks (Terraform, Cloudformation, and Serverless).\n\n\n- [pyhcl](https://github.com/virtuald/pyhcl)Â - HCL parser in Python\n- [python-hcl2](https://github.com/amplify-education/python-hcl2/)Â - HCL2 parser in Python\n- [rhcl](https://github.com/winebarrel/rhcl)Â - Pure Ruby HCL parser\n\n- [Terraform Generator](https://github.com/sudokar/generator-tf-module)Â - Scaffolding for a new terraform module or project with support of test frameworks (terratest and kitchen-terraform)\n- [Terraform GitOps Framework](https://www.kubestack.com/)Â - Everything you need to build reliable automation for AKS, EKS, and GKE Kubernetes clusters in one free and open-source framework.\n\n- [VS Code](https://marketplace.visualstudio.com/items?itemName=mauve.terraform) ",
      "temperature": 0.5,
      "tokens": 300
    }
  ],
  "tokenParams": {
    "prefix": [
      "Write an essay",
      "Write dashed notes",
      "Write bullet notes",
      "Write paragraphs",
      "Write an article",
      "Create a manual",
      "Create an outline",
      "Write a summary",
      "Write a program"
    ],
    "postfix": [
      "with sources",
      "with footnotes",
      "with comments",
      "with quotes"
    ]
  }
}